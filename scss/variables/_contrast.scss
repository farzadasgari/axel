@use 'sass:math';
@use 'sass:color';

// ==========================================================================
// Axel Framework - Contrast
// Description: Utility functions for calculating text color based on background
// luminance and ensuring WCAG 2.1 contrast ratios for accessibility.
// Author: Farzad Asgari
// Version: 1.0.0
// ==========================================================================


// --------------------------------------------------------------------------
// Luminance Calculation
// Calculates relative luminance of a color per WCAG 2.1.
// Returns a value between 0 (black) and 1 (white).
// Example usage: $lum: luminance(#AF47D2);
// --------------------------------------------------------------------------
@function luminance($color) {
  $r: math.div(color.channel($color, 'red', $space: rgb), 255);
  $g: math.div(color.channel($color, 'green', $space: rgb), 255);
  $b: math.div(color.channel($color, 'blue', $space: rgb), 255);

  $rs: if($r <= 0.03928, calc($r / 12.92), math.pow(calc(($r + 0.055) / 1.055), 2.4));
  $gs: if($g <= 0.03928, calc($g / 12.92), math.pow(calc(($g + 0.055) / 1.055), 2.4));
  $bs: if($b <= 0.03928, calc($b / 12.92), math.pow(calc(($b + 0.055) / 1.055), 2.4));

  @return 0.2126 * $rs + 0.7152 * $gs + 0.0722 * $bs;
}


// --------------------------------------------------------------------------
// Contrast Ratio
// Calculates contrast ratio between two colors per WCAG 2.1.
// Returns a value between 1 and 21.
// Example usage: $ratio: contrast-ratio(#AF47D2, #FFFFFF);
// --------------------------------------------------------------------------
@function contrast-ratio($color1, $color2) {
  $l1: luminance($color1);
  $l2: luminance($color2);
  $lighter: math.max($l1, $l2);
  $darker: math.min($l1, $l2);
  @return calc(($lighter + 0.05) / ($darker + 0.05));
}


// --------------------------------------------------------------------------
// Accessible Text Color
// Returns white or black based on background color, ensuring WCAG 2.1 AA
// contrast ratio (4.5:1 for normal text, 3:1 for large text).
// Example usage: color: accessible-text-color(#AF47D2);
// --------------------------------------------------------------------------
@function accessible-text-color($bg-color, $white: #FFFFFF, $black: #000000) {
  $white-ratio: contrast-ratio($bg-color, $white);
  $black-ratio: contrast-ratio($bg-color, $black);

  @if $white-ratio >= 4.5 {
    @return $white;
  } @else if $black-ratio >= 4.5 {
    @return $black;
  } @else {
    // Fallback to higher contrast if neither meets 4.5:1
    @return if($white-ratio > $black-ratio, $white, $black);
  }
}