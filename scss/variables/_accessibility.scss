@use 'sass:map';
@use 'spacing' as s;
@use 'typography' as t;
@use 'colors' as c;
@use '../mixins/mixins' as m;
@use 'base' as b;

// ==========================================================================
// Axel Framework - Accessibility
// Description: Accessibility utilities and mixins for the Axel CSS framework.
// Provides skip links, reduced motion support, high-contrast enhancements, and ARIA utilities.
// Builds on WCAG 2.1 compliance from _contrast.scss and base styles from _base.scss.
// Author: Farzad Asgari <https://github.com/farzadasgari>
// Version: 1.1.1
// ==========================================================================


// --------------------------------------------------------------------------
// Skip Links
// Utility for accessible skip-to-content links.
// Example usage: .skip-link { position: absolute; }
// --------------------------------------------------------------------------
.skip-link {
  position: absolute;
  top: -9999px;
  left: -9999px;
  z-index: 1000;
  background: var(--background);
  color: var(--text);
  padding: map.get(s.$spacings, 2);
  font-size: map.get(t.$font-sizes, base);

  &:focus {
    top: 0;
    left: 0;
  }
}


// --------------------------------------------------------------------------
// Reduced Motion Support
// Disables animations and transitions for prefers-reduced-motion users.
// Example usage: .no-motion { transition: none !important; }
// --------------------------------------------------------------------------
@media (prefers-reduced-motion: reduce) {
  .no-motion {
    animation: none !important;
    transition: none !important;
    transform: none !important;
  }

  // Apply to all buttons
  .btn {
    &.loading::after {
      animation: none !important;
      border: 2px solid var(--text);
    }
  }

  // Disable animated border effect
  [class*="btn-animated-border"] {
    &::before {
      transition: none !important;
      background: none !important;
    }
  }
}


// --------------------------------------------------------------------------
// High-Contrast Utilities
// Forces high-contrast styles for text and backgrounds.
// Example usage: .high-contrast-text { color: var(--text); }
// --------------------------------------------------------------------------
.high-contrast-text {
  color: var(--text) !important;
  -webkit-text-stroke: 0.5px var(--text);
}

.high-contrast-bg {
  background-color: var(--background) !important;
}

@each $color in map.keys(map.get(c.$themes, high-contrast)) {
  .high-contrast-#{$color} {
    background-color: var(--#{$color}) !important;
    color: var(--text) !important;
  }
}


// --------------------------------------------------------------------------
// ARIA Utilities
// Classes for common ARIA attributes to enhance semantics.
// Example usage: .aria-hidden { aria-hidden: "true"; }
// --------------------------------------------------------------------------
.aria-hidden {
  aria-hidden: "true";
}

.aria-expanded {
  &[aria-expanded="true"] {
    &::after {
      content: " (expanded)";
      @extend %sr-only;
    }
  }
  &[aria-expanded="false"] {
    &::after {
      content: " (collapsed)";
      @extend %sr-only;
    }
  }
}


// --------------------------------------------------------------------------
// Accessibility Variables
// Configuration for accessibility utilities.
// --------------------------------------------------------------------------
$focus-outline-width: 3px;
$focus-outline-offset: 2px;
$min-touch-target: s.$min-touch-target-size; // 44px