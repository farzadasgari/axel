@use "sass:map";


// ==========================================================================
// Axel Framework - Colors
// Description: Color palette for the Axel CSS framework, supporting light and
// dark themes with accessible, vibrant hues. Integrates CSS custom properties
// for runtime theming. Designed for modularity and WCAG compliance.
// Author: Farzad Asgari
// Version: 1.0.0
// ==========================================================================

// --------------------------------------------------------------------------
// Themes
// Defines color palettes for light and dark modes. Each theme includes semantic
// colors (primary, secondary, etc.), backgrounds, and text. Colors are chosen
// for WCAG 2.1 contrast ratios (minimum 4.5:1 for text).
// --------------------------------------------------------------------------


$themes: (
        light: (
                primary: #AF47D2,
                secondary: #00C4B4,
                danger: #E91E63,
                success: #00C853,
                warning: #FFCA28,
                info: #0288D1,
                dark: #2E2E2E,
                light: #F5F5F5,
                white: #FFFFFF,
                black: #000000,
                background: #F5F5F5,
                text: #2E2E2E,
                accent: #FF4081
        ),
        dark: (
                primary: #CE93D8,
                secondary: #26A69A,
                danger: #F06292,
                success: #4CAF50,
                warning: #FFECB3,
                info: #4FC3F7,
                dark: #212121,
                light: #424242,
                white: #FFFFFF,
                black: #000000,
                background: #212121,
                text: #F5F5F5,
                accent: #FF80AB
        )
);


// --------------------------------------------------------------------------
// Default Colors
// Sets the light theme as the default color palette for static SCSS usage.
// Use CSS custom properties (--primary, --background) for runtime theming.
// --------------------------------------------------------------------------
$colors: map.get($themes, light);


// --------------------------------------------------------------------------
// CSS Custom Properties
// Generates CSS custom properties for runtime theming (e.g., theme switching
// via JavaScript or class-based theming). Applied to :root for global access.
// Example usage: .theme-dark { --primary: #CE93D8; }
// --------------------------------------------------------------------------
:root {
  @each $key, $value in $colors {
    --#{$key}: #{$value};
  }
}