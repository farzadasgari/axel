@use 'sass:map';
@use 'sass:math';
@use 'colors' as c;
@use 'typography' as t;
@use 'spacing' as s;
@use 'grid' as g;
@use '../mixins/mixins' as m;
@use 'contrast';

// ==========================================================================
// Axel Framework - Utilities
// Description: Core utility classes for spacing, sizing, display, position,
// text, colors, and more. Supports responsive variants and light/dark/high-contrast
// Author: Farzad Asgari <https://github.com/farzadasgari>
// Version: 1.1.1
// ==========================================================================


// --------------------------------------------------------------------------
// Utility Configuration
// Defines utility properties, prefixes, and values for class generation.
// Example usage: .p-1 { padding: map.get(s.$spacings, 1); }
// --------------------------------------------------------------------------
$utilities: (
  // Spacing: Margin
  "margin": (
    "prefix": "m",
    "values": s.$spacings
  ),
  "margin-top": (
    "prefix": "mt",
    "values": s.$spacings
  ),
  "margin-right": (
    "prefix": "mr",
    "values": s.$spacings
  ),
  "margin-bottom": (
    "prefix": "mb",
    "values": s.$spacings
  ),
  "margin-left": (
    "prefix": "ml",
    "values": s.$spacings
  ),

  // Spacing: Padding
  "padding": (
    "prefix": "p",
    "values": s.$spacings
  ),
  "padding-top": (
    "prefix": "pt",
    "values": s.$spacings
  ),
  "padding-right": (
    "prefix": "pr",
    "values": s.$spacings
  ),
  "padding-bottom": (
    "prefix": "pb",
    "values": s.$spacings
  ),
  "padding-left": (
    "prefix": "pl",
    "values": s.$spacings
  ),

  // Spacing: Gap
  "gap": (
    "prefix": "gap",
    "values": s.$spacings
  ),

  // Sizing: Width
  "width": (
    "prefix": "w",
    "values": (
      "auto": auto,
      "full": 100%,
      "screen": 100vw,
      "min": min-content,
      "max": max-content,
      "0": 0,
      "25": 25%,
      "50": 50%,
      "75": 75%
    )
  ),

  // Sizing: Height
  "height": (
    "prefix": "h",
    "values": (
      "auto": auto,
      "full": 100%,
      "screen": 100vh,
      "min": min-content,
      "max": max-content,
      "0": 0,
      "25": 25%,
      "50": 50%,
      "75": 75%
    )
  ),

  // Display
  "display": (
    "prefix": "d",
    "values": (
      "none": none,
      "block": block,
      "inline": inline,
      "inline-block": inline-block,
      "flex": flex,
      "inline-flex": inline-flex,
      "grid": grid,
      "inline-grid": inline-grid,
      "table": table
    )
  ),

  // Position
  "position": (
    "prefix": "pos",
    "values": (
      "static": static,
      "relative": relative,
      "absolute": absolute,
      "fixed": fixed,
      "sticky": sticky
    )
  ),

  // Text Alignment
  "text-align": (
    "prefix": "text",
    "values": (
      "left": left,
      "center": center,
      "right": right,
      "justify": justify
    )
  ),

  // Font Weight
  "font-weight": (
    "prefix": "text",
    "values": t.$font-weights
  ),

  // Font Size
  "font-size": (
    "prefix": "text",
    "values": t.$font-sizes
  ),

  // Line Height
  "line-height": (
    "prefix": "lh",
    "values": (
      "1": 1,
      "tight": 1.25,
      "normal": 1.5,
      "loose": 2
    )
  ),

  // Text Color
  "color": (
    "prefix": "text",
    "values": map.keys(map.get(c.$themes, light)),
    "theme": true
  ),

  // Background Color
  "background-color": (
    "prefix": "bg",
    "values": map.keys(map.get(c.$themes, light)),
    "theme": true
  ),

  // Opacity
  "opacity": (
    "prefix": "opacity",
    "values": (
      "0": 0,
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1
    )
  ),

  // Cursor
  "cursor": (
    "prefix": "cursor",
    "values": (
      "auto": auto,
      "pointer": pointer,
      "default": default,
      "not-allowed": not-allowed
    )
  ),

  // Overflow
  "overflow": (
    "prefix": "overflow",
    "values": (
      "auto": auto,
      "hidden": hidden,
      "visible": visible,
      "scroll": scroll
    )
  ),

  // Visibility
  "visibility": (
    "prefix": "visibility",
    "values": (
      "visible": visible,
      "hidden": hidden,
      "collapse": collapse
    )
  )
);


// --------------------------------------------------------------------------
// Utility Generation
// Generates utility classes for all properties and breakpoints using mixins.
// Example usage: .p-1 { padding: 4px; }
// --------------------------------------------------------------------------
@each $prop, $map in $utilities {
  $prefix: map.get($map, "prefix");
  $values: map.get($map, "values");
  $theme: map.get($map, "theme", false);

  @include m.generate-utility($prop, $prefix, $values, $theme);
  @include m.generate-responsive-utility($prop, $prefix, $values, g.$breakpoints, $theme);
}


// --------------------------------------------------------------------------
// Accessibility Utilities
// Ensures color utilities meet WCAG 2.1 contrast requirements.
// Example usage: .text-primary { color: var(--primary); }
// --------------------------------------------------------------------------
@each $color in map.keys(map.get(c.$themes, light)) {
  .text-#{$color} {
    color: var(--#{$color});
  }
  .bg-#{$color} {
    background-color: var(--#{$color});
  }
}