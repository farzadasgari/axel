@use 'sass:map';
@use 'sass:color';
@use 'colors' as c;
@use 'typography' as t;
@use 'spacing' as s;
@use 'grid' as g;
@use '../mixins/mixins' as m;
@use 'contrast';
@use 'borders';
@use 'transitions';

// ==========================================================================
// Axel Framework - Forms
// Description: Form component styles for inputs, selects, textareas, labels,
// and validation states. Supports variants, sizes, themes, and WCAG 2.1 accessibility.
// Author: Farzad Asgari <https://github.com/farzadasgari>
// Version: 1.1.1
// ==========================================================================


// --------------------------------------------------------------------------
// Form Variables
// Core configuration for form elements, transitions, and accessibility.
// --------------------------------------------------------------------------
$form-transition: all 0.2s ease-in-out;
$form-border-width: 2px;
$form-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
$form-min-touch-target: s.$min-touch-target-size; // 44px
$form-contrast-ratio: 4.5;


// --------------------------------------------------------------------------
// Form Sizes
// Defines padding, font-size, and border-radius for form elements.
// --------------------------------------------------------------------------
$form-sizes: (
  xs: (
    padding: map.get(s.$spacings, 1) map.get(s.$spacings, 2),
    font-size: map.get(t.$font-sizes, xs),
    border-radius: 4px,
    min-height: $form-min-touch-target
  ),
  sm: (
    padding: map.get(s.$spacings, 2) map.get(s.$spacings, 3),
    font-size: map.get(t.$font-sizes, sm),
    border-radius: 6px,
    min-height: $form-min-touch-target
  ),
  md: (
    padding: map.get(s.$spacings, 3) map.get(s.$spacings, 4),
    font-size: map.get(t.$font-sizes, base),
    border-radius: 8px,
    min-height: $form-min-touch-target
  ),
  lg: (
    padding: map.get(s.$spacings, 4) map.get(s.$spacings, 5),
    font-size: map.get(t.$font-sizes, lg),
    border-radius: 10px,
    min-height: 48px
  ),
  xl: (
    padding: map.get(s.$spacings, 5) map.get(s.$spacings, 6),
    font-size: map.get(t.$font-sizes, xl),
    border-radius: 12px,
    min-height: 52px
  )
);


// --------------------------------------------------------------------------
// Base Input Styles
// Core styles for input, select, and textarea elements.
// --------------------------------------------------------------------------
.input,
select,
textarea {
  display: block;
  width: 100%;
  font-family: map.get(t.$font-families, body);
  font-weight: map.get(t.$font-weights, regular);
  color: var(--text);
  background-color: var(--background);
  border: $form-border-width solid var(--border);
  border-radius: map.get(map.get($form-sizes, md), border-radius);
  padding: map.get(map.get($form-sizes, md), padding);
  font-size: map.get(map.get($form-sizes, md), font-size);
  min-height: map.get(map.get($form-sizes, md), min-height);
  line-height: 1.5;
  transition: $form-transition;
  box-shadow: $form-shadow;
  box-sizing: border-box;

  // Accessibility
  @include m.accessible-component;

  // Focus state
  &:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.2);
  }

  // Disabled/Readonly
  &:disabled,
  &[readonly] {
    opacity: map.get(c.$color-variations, disabled);
    cursor: not-allowed;
    background-color: var(--disabled-bg);
  }

  // Placeholder
  &::placeholder {
    color: var(--placeholder);
    opacity: 0.6;
  }
}

// Textarea specific
textarea {
  resize: vertical;
  min-height: 100px;
}

// Select specific
select {
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 1rem;
  padding-right: map.get(s.$spacings, 5);
}


// --------------------------------------------------------------------------
// Form Variants
// Generates variant styles for form elements (solid, outline, etc.).
// --------------------------------------------------------------------------
@each $color, $hex in map.get(c.$themes, light) {
  .input-#{$color} {
    border-color: var(--#{$color});

    &:focus {
      border-color: var(--#{$color});
      box-shadow: 0 0 0 3px rgba(var(--#{$color}-rgb), 0.2);
    }
  }

  .input-outline-#{$color} {
    background-color: transparent;
    border-color: var(--#{$color});
    color: var(--#{$color});

    &:focus {
      border-color: var(--#{$color});
      box-shadow: 0 0 0 3px rgba(var(--#{$color}-rgb), 0.2);
    }
  }

  .input-soft-#{$color} {
    background-color: rgba(var(--#{$color}-rgb), 0.15);
    border-color: transparent;
    color: var(--#{$color});

    &:focus {
      border-color: var(--#{$color});
      box-shadow: 0 0 0 3px rgba(var(--#{$color}-rgb), 0.2);
    }
  }
}