@use 'sass:map';
@use 'colors' as c;
@use 'typography' as t;
@use 'spacing' as s;
@use 'borders' as b;
@use 'animations';
@use 'grid' as g;
@use '../mixins/mixins' as m;

// ==========================================================================
// Axel Framework - Components
// Description: Simple component styles for badges, spinners, breadcrumbs, pagination,
// progress bars, placeholders, alerts, and list groups.
// Author: Farzad Asgari <https://github.com/farzadasgari>
// Version: 1.1.1
// ==========================================================================


// --------------------------------------------------------------------------
// Badges
// Styles for small labels or tags.
// --------------------------------------------------------------------------
.badge {
  display: inline-block;
  padding: map.get(s.$spacings, 1) map.get(s.$spacings, 2);
  font-size: map.get(t.$font-sizes, xs);
  font-weight: map.get(t.$font-weights, medium);
  line-height: 1.5;
  border-radius: map.get(b.$border-radii, "4px");
  color: var(--background);
  background-color: var(--primary);
  @include m.accessible-component;

  &.animate {
    animation: scale-in 0.3s ease-out;
    animation-fill-mode: both;

    @media (prefers-reduced-motion: reduce) {
      animation: none !important;
    }
  }
}

@each $color, $hex in map.get(c.$themes, light) {
  .badge-#{$color} {
    background-color: var(--#{$color});
    color: map.get(c.$themes, light, text);
  }
}


// --------------------------------------------------------------------------
// Spinners
// Styles for loading indicators.
// --------------------------------------------------------------------------
.spinner {
  display: inline-block;
  width: 24px;
  height: 24px;
  border: map.get(b.$border-widths, "2px") solid var(--primary);
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  animation-fill-mode: both;
  @include m.accessible-component;

  @media (prefers-reduced-motion: reduce) {
    animation: none !important;
  }
}

@each $color, $hex in map.get(c.$themes, light) {
  .spinner-#{$color} {
    border-color: var(--#{$color});
    border-top-color: transparent;
  }
}


// --------------------------------------------------------------------------
// Breadcrumbs
// Styles for navigation trails.
// --------------------------------------------------------------------------
.breadcrumb {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  padding: map.get(s.$spacings, 2);
  margin: 0;
  font-size: map.get(t.$font-sizes, sm);
}

.breadcrumb-item {
  & + .breadcrumb-item::before {
    content: "/";
    padding: 0 map.get(s.$spacings, 1);
    color: var(--text-muted);
  }

  a {
    color: var(--primary);
    text-decoration: none;
    @include m.accessible-component;

    &:hover {
      color: var(--primary-dark);
      animation: scale-in 0.3s ease-out;
      animation-fill-mode: both;

      @media (prefers-reduced-motion: reduce) {
        animation: none !important;
      }
    }
  }
}