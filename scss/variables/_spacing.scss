@use 'sass:map';

// ==========================================================================
// Axel Framework - Spacing
// Description: Spacing tokens for the Axel CSS framework, providing a modular
// scale for margins, paddings, gaps, and grid gutters. Uses rem units for
// accessibility and scalability. Designed for utility classes and responsive design.
// Author: Farzad Asgari
// Version: 1.0.0
// ==========================================================================


// --------------------------------------------------------------------------
// Spacing Scale
// A modular scale for margins, paddings, and other spacing properties.
// Uses rem units for accessibility (relative to $base-font-size from _typography.scss).
// Keys (0, 1, 2, etc.) enable easy iteration for utility classes (e.g., .m-1, .p-2).
// Example usage: margin: map.get($spacings, 3);
// --------------------------------------------------------------------------
$spacings: (
        0: 0, // No spacing
        1: 0.25rem, // 4px, for tight spacing
        2: 0.5rem, // 8px, for small gaps
        3: 1rem, // 16px, for standard spacing
        4: 1.5rem, // 24px, for medium gaps
        5: 2rem, // 32px, for larger spacing
        6: 3rem, // 48px, for sections
        7: 4rem, // 64px, for major layouts
        8: 6rem // 96px, for hero sections
);


// --------------------------------------------------------------------------
// Negative Spacing
// Negative values for margins to support offset layouts.
// Matches positive $spacings for consistency.
// Example usage: margin-left: map.get($negative-spacings, 2);
// --------------------------------------------------------------------------
$negative-spacings: (
        1: -0.25rem, // -4px
        2: -0.5rem, // -8px
        3: -1rem, // -16px
        4: -1.5rem, // -24px
        5: -2rem // -32px
);


// --------------------------------------------------------------------------
// Grid Gutters
// Gutter widths for grid and flex layouts (e.g., columns, rows).
// Supports multiple sizes for flexibility in layout design.
// Example usage: gap: map.get($grid-gutters, default);
// --------------------------------------------------------------------------
$grid-gutters: (
        none: 0, // No gutter
        tight: 0.5rem, // 8px, for compact layouts
        default: 1rem, // 16px, standard gutter
        loose: 1.5rem // 24px, for spacious layouts
);


// --------------------------------------------------------------------------
// Container Paddings
// Padding for container elements at different breakpoints.
// Integrates with $breakpoints from _grid.scss (to be defined).
// Example usage: padding: map.get($container-paddings, sm);
// --------------------------------------------------------------------------
$container-paddings: (
        xs: map.get($spacings, 2), // 8px for extra-small screens
        sm: map.get($spacings, 3), // 16px for small screens
        md: map.get($spacings, 4), // 24px for medium screens
        lg: map.get($spacings, 5), // 32px for large screens
        xl: map.get($spacings, 6) // 48px for extra-large screens
);